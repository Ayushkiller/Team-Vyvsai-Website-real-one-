{"version":3,"file":"static/js/71.4eff9540.chunk.js","mappings":"wKAGA,MAiEA,EAjEmBA,KACjB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,IAC7CG,GAAUC,EAAAA,EAAAA,MA0BhB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,UACzCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAC,oBACjCC,EAAAA,EAAAA,MAAA,QAAMC,SA7BOC,UACnBC,EAAEC,iBAEF,IACE,MAAMC,QAAiBC,MAAM,8BAA+B,CAC1DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAErB,YAGzB,GAAKe,EAASO,GAIZjB,EAAQkB,KAAK,kCAJG,CAChB,MAAMC,QAAaT,EAASU,OAC5BrB,EAAiBoB,EAAKE,OACxB,CAGF,CAAE,MAAOC,GACPC,QAAQD,MAAM,wBAAyBA,GACvCvB,EAAiB,CAAC,CAAEyB,IAAK,yCAC3B,GAQoCrB,UAAU,mBAAmBsB,YAAU,EAAArB,SAAA,EACnEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,QAAQvB,UAAU,aAAYC,SAAC,kDAG9CF,EAAAA,EAAAA,KAAA,SACEyB,KAAK,OACLC,GAAG,QACHC,KAAK,QACL1B,UAAU,eACV2B,YAAY,QACZC,MAAOpC,EACPqC,SAAWxB,GAAMZ,EAASY,EAAEyB,OAAOF,OACnCG,UAAQ,IAETpC,EAAcqC,OAAS,IACtBjC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,SACtCN,EAAc,GAAG0B,UAIxBtB,EAAAA,EAAAA,KAAA,UAAQyB,KAAK,SAASxB,UAAU,wBAAuBC,SAAC,qBAM1D,C","sources":["components/Login/RequestOtp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst RequestOtp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [errorMessages, setErrorMessages] = useState([]);\n  const history = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"/password-reset/request-otp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      if (!response.ok) {\n        const data = await response.json();\n        setErrorMessages(data.errors);\n      } else {\n        history.push(\"/password-reset/verify-otp\"); // Redirect to OTP verification page\n      }\n    } catch (error) {\n      console.error(\"Error requesting OTP:\", error);\n      setErrorMessages([{ msg: \"An error occurred. Please try again.\" }]);\n    }\n  };\n\n  return (\n    <div className=\"container mt-5 pt-4\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <h1 className=\"text-center mb-4\">Reset Password</h1>\n          <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\n            <div className=\"mb-3\">\n              <label htmlFor=\"email\" className=\"form-label\">\n                Enter your registered Email or Phone Number:\n              </label>\n              <input\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                className=\"form-control\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n              {errorMessages.length > 0 && (\n                <div className=\"invalid-feedback d-block\">\n                  {errorMessages[0].msg}\n                </div>\n              )}\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary w-100\">\n              Get OTP\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RequestOtp;\n"],"names":["RequestOtp","email","setEmail","useState","errorMessages","setErrorMessages","history","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","push","data","json","errors","error","console","msg","noValidate","htmlFor","type","id","name","placeholder","value","onChange","target","required","length"],"sourceRoot":""}