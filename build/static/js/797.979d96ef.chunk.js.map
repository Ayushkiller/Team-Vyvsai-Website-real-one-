{"version":3,"file":"static/js/797.979d96ef.chunk.js","mappings":"0KAGA,MAsFA,EAtFsBA,KACpB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,IAC7CK,GAAUC,EAAAA,EAAAA,MA8BhB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,UACzCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAC,sBACjCC,EAAAA,EAAAA,MAAA,QAAMC,SAjCOC,UAEnB,GADAC,EAAEC,iBACEhB,IAAgBG,EAKpB,IACE,MAAMc,QAAiBC,MAAM,+BAAgC,CAC3DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEvB,cAAaG,sBAGtC,GAAKc,EAASO,GAIZjB,EAAQkB,KAAK,cAJG,CAChB,MAAMC,QAAaT,EAASU,OAC5BrB,EAAiBoB,EAAKE,OACxB,CAGF,CAAE,MAAOC,GACPC,QAAQD,MAAM,4BAA6BA,GAC3CvB,EAAiB,CAAC,CAAEyB,IAAK,yCAC3B,MAtBEzB,EAAiB,CAAC,CAAEyB,IAAK,2BAsB3B,EAQoCrB,UAAU,mBAAmBsB,YAAU,EAAArB,SAAA,EACnEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,cAAcvB,UAAU,aAAYC,SAAC,mBACpDF,EAAAA,EAAAA,KAAA,SACEyB,KAAK,WACLC,GAAG,cACHC,KAAK,cACL1B,UAAU,eACV2B,YAAY,qBACZC,MAAOtC,EACPuC,SAAWxB,GAAMd,EAAec,EAAEyB,OAAOF,OACzCG,UAAQ,IAETpC,EAAcqC,OAAS,IACtBjC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,SACtCN,EAAc,GAAG0B,UAKxBnB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,kBAAkBvB,UAAU,aAAYC,SAAC,2BACxDF,EAAAA,EAAAA,KAAA,SACEyB,KAAK,WACLC,GAAG,kBACHC,KAAK,kBACL1B,UAAU,eACV2B,YAAY,uBACZC,MAAOnC,EACPoC,SAAWxB,GAAMX,EAAmBW,EAAEyB,OAAOF,OAC7CG,UAAQ,IAETpC,EAAcqC,OAAS,IACtBjC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,SACtCN,EAAc,GAAG0B,UAKxBtB,EAAAA,EAAAA,KAAA,UAAQyB,KAAK,SAASxB,UAAU,wBAAuBC,SAAC,4BAI1D,C","sources":["components/Login/PasswordReset.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PasswordReset = () => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const history = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      setErrorMessages([{ msg: 'Passwords do not match' }]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('/password-reset/new-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ newPassword, confirmPassword }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        setErrorMessages(data.errors);\r\n      } else {\r\n        history.push('/login'); // Redirect to login page after successful password reset\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      setErrorMessages([{ msg: 'An error occurred. Please try again.' }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5 pt-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <h1 className=\"text-center mb-4\">Set New Password</h1>\r\n          <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"newPassword\" className=\"form-label\">New Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"newPassword\"\r\n                name=\"newPassword\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter new password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                required\r\n              />\r\n              {errorMessages.length > 0 && (\r\n                <div className=\"invalid-feedback d-block\">\r\n                  {errorMessages[0].msg}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm New Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                className=\"form-control\"\r\n                placeholder=\"Confirm new password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n              />\r\n              {errorMessages.length > 0 && (\r\n                <div className=\"invalid-feedback d-block\">\r\n                  {errorMessages[0].msg}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">Reset Password</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;"],"names":["PasswordReset","newPassword","setNewPassword","useState","confirmPassword","setConfirmPassword","errorMessages","setErrorMessages","history","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","push","data","json","errors","error","console","msg","noValidate","htmlFor","type","id","name","placeholder","value","onChange","target","required","length"],"sourceRoot":""}