{"version":3,"file":"static/js/776.b116be9c.chunk.js","mappings":"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","sources":["components/Login/Register.jsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Register.css\";\nimport axios from \"axios\";\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    mobileNo: \"\",\n    email: \"\",\n    password: \"\",\n    preferences: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState({\n    error: \"\",\n    success: false,\n  });\n\n  const validateForm = useCallback(() => {\n    const newErrors = {};\n    const { username, mobileNo, email, password, preferences } = formData;\n\n    if (!username.trim()) newErrors.username = \"Username is required\";\n    if (!mobileNo.trim()) newErrors.mobileNo = \"Contact number is required\";\n    else if (!/^\\d{10}$/.test(mobileNo))\n      newErrors.mobileNo = \"Invalid contact number\";\n    if (!email.trim()) newErrors.email = \"Email is required\";\n    else if (!/\\S+@\\S+\\.\\S+/.test(email))\n      newErrors.email = \"Invalid email address\";\n    if (!password.trim()) newErrors.password = \"Password is required\";\n    else if (password.length < 8)\n      newErrors.password = \"Password must be at least 8 characters\";\n    if (!preferences) newErrors.preferences = \"Please select a preference\";\n\n    return newErrors;\n  }, [formData]);\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n    setErrors((prev) => ({ ...prev, [name]: \"\" }));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formErrors = validateForm();\n\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitStatus({ error: \"\", success: false });\n\n\n    try {\n    await axios.post('https://dbbackend.something.vyvsai.com/api/register', formData);\n      setSubmitStatus({ error: \"\", success: true });\n    } catch (error) {\n      console.error(\"Error submitting data:\", error);\n      setSubmitStatus({\n        error: error.response?.data?.message || \"Registration failed\",\n        success: false,\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const renderFormField = (name, label, type = \"text\") => (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        id={name}\n        name={name}\n        type={type}\n        value={formData[name]}\n        onChange={handleChange}\n        aria-invalid={errors[name] ? \"true\" : \"false\"}\n        aria-describedby={errors[name] ? `${name}-error` : undefined}\n      />\n      {errors[name] && (\n        <p id={`${name}-error`} className=\"error\">\n          {errors[name]}\n        </p>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"register-container\">\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit} noValidate>\n        {renderFormField(\"username\", \"Username\")}\n        {renderFormField(\"mobileNo\", \"Contact Number\", \"tel\")}\n        {renderFormField(\"email\", \"Email\", \"email\")}\n        {renderFormField(\"password\", \"Password\", \"password\")}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"preferences\">Notification Preferences</label>\n          <select\n            id=\"preferences\"\n            name=\"preferences\"\n            value={formData.preferences}\n            onChange={handleChange}\n            aria-invalid={errors.preferences ? \"true\" : \"false\"}\n            aria-describedby={\n              errors.preferences ? \"preferences-error\" : undefined\n            }\n          >\n            <option value=\"\">Select preference</option>\n            <option value=\"government-tenders\">Government Tenders</option>\n          </select>\n          {errors.preferences && (\n            <p id=\"preferences-error\" className=\"error\">\n              {errors.preferences}\n            </p>\n          )}\n        </div>\n\n        {submitStatus.error && (\n          <div className=\"alert error\">\n            <p>{submitStatus.error}</p>\n          </div>\n        )}\n        {submitStatus.success && (\n          <div className=\"alert success\">\n            <p>Registration successful!</p>\n          </div>\n        )}\n\n        <button type=\"submit\" disabled={isSubmitting}>\n          {isSubmitting ? \"Registering...\" : \"Register\"}\n        </button>\n      </form>\n      <p className=\"login-link\">\n        Already have an account? <Link to=\"/login\">Login here</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["Register","formData","setFormData","useState","username","mobileNo","email","password","preferences","errors","setErrors","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","error","success","validateForm","useCallback","newErrors","trim","test","length","handleChange","e","name","value","target","prev","renderFormField","label","type","arguments","undefined","_jsxs","className","children","_jsx","htmlFor","id","onChange","onSubmit","async","preventDefault","formErrors","Object","keys","axios","post","_error$response","_error$response$data","console","response","data","message","noValidate","disabled","Link","to"],"sourceRoot":""}