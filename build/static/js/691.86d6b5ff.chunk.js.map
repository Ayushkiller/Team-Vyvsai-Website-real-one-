{"version":3,"file":"static/js/691.86d6b5ff.chunk.js","mappings":"0KAGA,MAuEA,EAvEkBA,KAChB,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,KACxBC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,IAC/CK,GAAUC,EAAAA,EAAAA,MA4BhB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,CACjCN,IACCO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SAAEN,KAExCO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACzCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,gBACjCF,EAAAA,EAAAA,MAAA,QAAMI,SAlCOC,UACnBC,EAAEC,iBAEF,IACE,MAAMC,QAAiBC,MAAM,6BAA8B,CACzDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEvB,UAGzB,GAAKiB,EAASO,GAGP,CACL,MAAMC,QAAaR,EAASS,OAC5BpB,EAAkBmB,EAAKE,SACvBpB,EAAQqB,KAAK,+BACf,KAPkB,CAChB,MAAMH,QAAaR,EAASS,OAC5BtB,EAAiBqB,EAAKI,OACxB,CAKF,CAAE,MAAOC,GACPC,QAAQD,MAAM,uBAAwBA,GACtC1B,EAAiB,CAAC,CAAE4B,IAAK,yCAC3B,GAWoCtB,UAAU,mBAAmBuB,YAAU,EAAAtB,SAAA,EACnEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,MAAMxB,UAAU,aAAYC,SAAC,oBAG5CC,EAAAA,EAAAA,KAAA,SACEuB,KAAK,OACLC,GAAG,MACHC,KAAK,MACL3B,UAAU,eACV4B,YAAY,YACZC,MAAOvC,EACPwC,SAAWzB,GAAMd,EAAOc,EAAE0B,OAAOF,OACjCG,UAAQ,IAETvC,EAAcwC,OAAS,IACtB/B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SACtCR,EAAc,GAAG6B,UAIxBpB,EAAAA,EAAAA,KAAA,UAAQuB,KAAK,SAASzB,UAAU,wBAAuBC,SAAC,yBAM1D,C","sources":["components/Login/VerifyOtp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst VerifyOtp = () => {\n  const [otp, setOtp] = useState(\"\");\n  const [errorMessages, setErrorMessages] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const history = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"/password-reset/verify-otp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ otp }),\n      });\n\n      if (!response.ok) {\n        const data = await response.json();\n        setErrorMessages(data.errors);\n      } else {\n        const data = await response.json();\n        setSuccessMessage(data.message);\n        history.push(\"/password-reset/new-password\"); // Redirect to new password page\n      }\n    } catch (error) {\n      console.error(\"Error verifying OTP:\", error);\n      setErrorMessages([{ msg: \"An error occurred. Please try again.\" }]);\n    }\n  };\n\n  return (\n    <div className=\"container mt-5 pt-4\">\n      {successMessage && (\n        <div className=\"alert alert-success\">{successMessage}</div>\n      )}\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <h1 className=\"text-center mb-4\">Verify OTP</h1>\n          <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\n            <div className=\"mb-3\">\n              <label htmlFor=\"otp\" className=\"form-label\">\n                Enter the OTP:\n              </label>\n              <input\n                type=\"text\"\n                id=\"otp\"\n                name=\"otp\"\n                className=\"form-control\"\n                placeholder=\"Enter OTP\"\n                value={otp}\n                onChange={(e) => setOtp(e.target.value)}\n                required\n              />\n              {errorMessages.length > 0 && (\n                <div className=\"invalid-feedback d-block\">\n                  {errorMessages[0].msg}\n                </div>\n              )}\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary w-100\">\n              Verify OTP\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VerifyOtp;\n"],"names":["VerifyOtp","otp","setOtp","useState","errorMessages","setErrorMessages","successMessage","setSuccessMessage","history","useNavigate","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","message","push","errors","error","console","msg","noValidate","htmlFor","type","id","name","placeholder","value","onChange","target","required","length"],"sourceRoot":""}