{"version":3,"file":"static/js/249.f493a8ab.chunk.js","mappings":"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","sources":["components/Tender/Tenders.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://localhost:5000/api';\r\n\r\nconst Tenders = () => {\r\n  const [state, setState] = useState('');\r\n  const [district, setDistrict] = useState('');\r\n  const [department, setDepartment] = useState('');\r\n  const [showExpired, setShowExpired] = useState(false);\r\n  const [dropdownOptions, setDropdownOptions] = useState({\r\n    states: [],\r\n    districts: [],\r\n    departments: [],\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [tenderDetails, setTenderDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchStates();\r\n  }, []);\r\n\r\n  const fetchStates = async () => {\r\n    setLoading(true);\r\n    try {\r\n      console.log('Fetching states...');\r\n      const response = await axios.get('/states');\r\n      console.log('States response:', response.data);\r\n      setDropdownOptions(prev => ({ ...prev, states: response.data.states }));\r\n    } catch (err) {\r\n      console.error('Error fetching states:', err);\r\n      console.error('Error details:', err.response);\r\n      setError(`Error fetching states: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStateChange = async (e) => {\r\n    const selectedState = e.target.value;\r\n    setState(selectedState);\r\n    setDistrict('');\r\n    setDepartment('');\r\n    if (selectedState) {\r\n      try {\r\n        const [districtsResponse, departmentsResponse] = await Promise.all([\r\n          axios.get(`/districts/${selectedState}`),\r\n          axios.get(`/departments/${selectedState}`)\r\n        ]);\r\n        setDropdownOptions(prev => ({\r\n          ...prev,\r\n          districts: districtsResponse.data.districts,\r\n          departments: departmentsResponse.data.departments\r\n        }));\r\n      } catch (err) {\r\n        setError('Error fetching districts or departments');\r\n        console.error('Error fetching districts or departments:', err);\r\n      }\r\n    } else {\r\n      setDropdownOptions(prev => ({ ...prev, districts: [], departments: [] }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.get('/tenders', {\r\n        params: { state, district, department, showExpired }\r\n      });\r\n      setTenderDetails(response.data.tenders);\r\n    } catch (err) {\r\n      setError('Error fetching tender details');\r\n      console.error('Error fetching tender details:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5 pt-4\">\r\n      <h1 className=\"mb-4\">Tender Search</h1>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-md-3\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"state\" className=\"form-label\">State:</label>\r\n              <select\r\n                id=\"state\"\r\n                name=\"state\"\r\n                className=\"form-select\"\r\n                required\r\n                value={state}\r\n                onChange={handleStateChange}\r\n              >\r\n                <option value=\"\">Select a State</option>\r\n                {dropdownOptions.states.map(s => (\r\n                  <option key={s} value={s}>{s}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"district\" className=\"form-label\">District:</label>\r\n              <select\r\n                id=\"district\"\r\n                name=\"district\"\r\n                className=\"form-select\"\r\n                value={district}\r\n                onChange={(e) => setDistrict(e.target.value)}\r\n              >\r\n                <option value=\"\">Select a District</option>\r\n                {dropdownOptions.districts.map(d => (\r\n                  <option key={d} value={d}>{d}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"department\" className=\"form-label\">Department:</label>\r\n              <select\r\n                id=\"department\"\r\n                name=\"department\"\r\n                className=\"form-select\"\r\n                value={department}\r\n                onChange={(e) => setDepartment(e.target.value)}\r\n              >\r\n                <option value=\"\">Select a Department</option>\r\n                {dropdownOptions.departments.map(d => (\r\n                  <option key={d} value={d}>{d}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"form-check mt-4\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                id=\"showExpired\"\r\n                checked={showExpired}\r\n                onChange={(e) => setShowExpired(e.target.checked)}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"showExpired\">\r\n                Show Expired Tenders\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Search Tenders</button>\r\n      </form>\r\n\r\n      {tenderDetails && tenderDetails.length > 0 && (\r\n        <div className=\"mt-5\">\r\n          <h2 className=\"mb-4\">Tender Details</h2>\r\n          {tenderDetails.map((tender, index) => (\r\n            <div key={index} className=\"card mb-4\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{tender.title}</h5>\r\n                <p className=\"card-text\"><strong>Tender ID:</strong> {tender.tender_id}</p>\r\n                <p className=\"card-text\"><strong>Organization:</strong> {tender.org_name}</p>\r\n                <p className=\"card-text\"><strong>Category:</strong> {tender.category}</p>\r\n                <p className=\"card-text\"><strong>Price:</strong> {tender.price}</p>\r\n                <p className=\"card-text\"><strong>Address:</strong> {tender.address}</p>\r\n                <p className=\"card-text\"><strong>Closing Date:</strong> {tender.closing_date}</p>\r\n                {tender.boq && tender.boq.length ? (\r\n                  <a href={tender.boq} className=\"btn btn-primary\" download>Download BOQ</a>\r\n                ) : (\r\n                  <span className=\"text-muted\">No BOQ available</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tenders;"],"names":["axios","defaults","baseURL","Tenders","state","setState","useState","district","setDistrict","department","setDepartment","showExpired","setShowExpired","dropdownOptions","setDropdownOptions","states","districts","departments","loading","setLoading","error","setError","tenderDetails","setTenderDetails","useEffect","fetchStates","async","console","log","response","get","data","prev","err","message","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","params","tenders","htmlFor","id","name","required","value","onChange","selectedState","target","districtsResponse","departmentsResponse","Promise","all","map","s","d","type","checked","length","tender","index","title","tender_id","org_name","category","price","address","closing_date","boq","href","download"],"sourceRoot":""}