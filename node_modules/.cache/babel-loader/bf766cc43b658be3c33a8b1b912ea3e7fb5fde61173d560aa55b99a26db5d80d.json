{"ast":null,"code":"const express = require('express');\nconst mongoose = require('mongoose');\nconst router = express.Router();\n\n// Connect to MongoDB\nmongoose.connect('mongodb://localhost:27017/Registered', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n// Define a schema for the user\nconst UserSchema = new mongoose.Schema({\n  username: String,\n  mobileNo: String,\n  email: String,\n  password: String,\n  preferences: String\n});\n\n// Create a model from the schema\nconst User = mongoose.model('User', UserSchema);\nrouter.post('/register', async (req, res) => {\n  try {\n    const newUser = new User(req.body);\n    await newUser.save();\n    res.status(201).json({\n      message: 'User registered successfully'\n    });\n  } catch (error) {\n    console.error('Registration error:', error);\n    res.status(500).json({\n      message: 'Error registering user'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","mongoose","router","Router","connect","useNewUrlParser","useUnifiedTopology","UserSchema","Schema","username","String","mobileNo","email","password","preferences","User","model","post","req","res","newUser","body","save","status","json","message","error","console","module","exports"],"sources":["E:/Team-Vyvsai-Website-real-one-/vyvsai-website/src/Database/connect.js"],"sourcesContent":["const express = require('express');\nconst mongoose = require('mongoose');\nconst router = express.Router();\n\n// Connect to MongoDB\nmongoose.connect('mongodb://localhost:27017/Registered', { useNewUrlParser: true, useUnifiedTopology: true });\n\n// Define a schema for the user\nconst UserSchema = new mongoose.Schema({\n  username: String,\n  mobileNo: String,\n  email: String,\n  password: String,\n  preferences: String\n});\n\n// Create a model from the schema\nconst User = mongoose.model('User', UserSchema);\n\nrouter.post('/register', async (req, res) => {\n  try {\n    const newUser = new User(req.body);\n    await newUser.save();\n    res.status(201).json({ message: 'User registered successfully' });\n  } catch (error) {\n    console.error('Registration error:', error);\n    res.status(500).json({ message: 'Error registering user' });\n  }\n});\n\nmodule.exports = router;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,MAAM,GAAGH,OAAO,CAACI,MAAM,CAAC,CAAC;;AAE/B;AACAF,QAAQ,CAACG,OAAO,CAAC,sCAAsC,EAAE;EAAEC,eAAe,EAAE,IAAI;EAAEC,kBAAkB,EAAE;AAAK,CAAC,CAAC;;AAE7G;AACA,MAAMC,UAAU,GAAG,IAAIN,QAAQ,CAACO,MAAM,CAAC;EACrCC,QAAQ,EAAEC,MAAM;EAChBC,QAAQ,EAAED,MAAM;EAChBE,KAAK,EAAEF,MAAM;EACbG,QAAQ,EAAEH,MAAM;EAChBI,WAAW,EAAEJ;AACf,CAAC,CAAC;;AAEF;AACA,MAAMK,IAAI,GAAGd,QAAQ,CAACe,KAAK,CAAC,MAAM,EAAET,UAAU,CAAC;AAE/CL,MAAM,CAACe,IAAI,CAAC,WAAW,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC3C,IAAI;IACF,MAAMC,OAAO,GAAG,IAAIL,IAAI,CAACG,GAAG,CAACG,IAAI,CAAC;IAClC,MAAMD,OAAO,CAACE,IAAI,CAAC,CAAC;IACpBH,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA+B,CAAC,CAAC;EACnE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3CP,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAyB,CAAC,CAAC;EAC7D;AACF,CAAC,CAAC;AAEFG,MAAM,CAACC,OAAO,GAAG3B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}