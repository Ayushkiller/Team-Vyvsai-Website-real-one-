{"ast":null,"code":"// src/services/authService.js\nimport { jwtVerify, SignJWT } from 'jose';\nimport jwtDecode from 'jwt-decode';\nconst secret = new TextEncoder().encode('your-256-bit-secret');\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return false;\n  try {\n    const {\n      payload\n    } = jwtVerify(token, secret);\n    return !!payload;\n  } catch (e) {\n    return false;\n  }\n};\nexport const login = async (username, password) => {\n  // Perform login logic and get the token\n  const token = await fetchTokenFromServer(username, password);\n  localStorage.setItem('token', token);\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nconst fetchTokenFromServer = async (username, password) => {\n  // Replace with actual API call\n  const token = await new SignJWT({\n    username\n  }).setProtectedHeader({\n    alg: 'HS256'\n  }).sign(secret);\n  return token;\n};","map":{"version":3,"names":["jwtVerify","SignJWT","jwtDecode","secret","TextEncoder","encode","isAuthenticated","token","localStorage","getItem","payload","e","login","username","password","fetchTokenFromServer","setItem","logout","removeItem","setProtectedHeader","alg","sign"],"sources":["E:/Team-Vyvsai-Website-real-one-/vyvsai-website/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\nimport { jwtVerify, SignJWT } from 'jose';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst secret = new TextEncoder().encode('your-256-bit-secret');\r\n\r\nexport const isAuthenticated = () => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) return false;\r\n\r\n  try {\r\n    const { payload } = jwtVerify(token, secret);\r\n    return !!payload;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n  // Perform login logic and get the token\r\n  const token = await fetchTokenFromServer(username, password);\r\n  localStorage.setItem('token', token);\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n};\r\n\r\nconst fetchTokenFromServer = async (username, password) => {\r\n  // Replace with actual API call\r\n  const token = await new SignJWT({ username })\r\n    .setProtectedHeader({ alg: 'HS256' })\r\n    .sign(secret);\r\n  return token;\r\n};"],"mappings":"AAAA;AACA,SAASA,SAAS,EAAEC,OAAO,QAAQ,MAAM;AACzC,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,MAAM,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,qBAAqB,CAAC;AAE9D,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,KAAK;EAExB,IAAI;IACF,MAAM;MAAEG;IAAQ,CAAC,GAAGV,SAAS,CAACO,KAAK,EAAEJ,MAAM,CAAC;IAC5C,OAAO,CAAC,CAACO,OAAO;EAClB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD;EACA,MAAMP,KAAK,GAAG,MAAMQ,oBAAoB,CAACF,QAAQ,EAAEC,QAAQ,CAAC;EAC5DN,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC;AACtC,CAAC;AAED,OAAO,MAAMU,MAAM,GAAGA,CAAA,KAAM;EAC1BT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;AAED,MAAMH,oBAAoB,GAAG,MAAAA,CAAOF,QAAQ,EAAEC,QAAQ,KAAK;EACzD;EACA,MAAMP,KAAK,GAAG,MAAM,IAAIN,OAAO,CAAC;IAAEY;EAAS,CAAC,CAAC,CAC1CM,kBAAkB,CAAC;IAAEC,GAAG,EAAE;EAAQ,CAAC,CAAC,CACpCC,IAAI,CAAClB,MAAM,CAAC;EACf,OAAOI,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}